<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>duek</title>
  
  <subtitle>爱猫，爱代码，爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.dukevs.cn/"/>
  <updated>2018-06-23T13:46:12.030Z</updated>
  <id>http://www.dukevs.cn/</id>
  
  <author>
    <name>duke blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WooCommerce 是什么？</title>
    <link href="http://www.dukevs.cn/woocommens.html"/>
    <id>http://www.dukevs.cn/woocommens.html</id>
    <published>2018-06-23T12:04:51.000Z</published>
    <updated>2018-06-23T13:46:12.030Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WooCommerce-是什么？"><a href="#WooCommerce-是什么？" class="headerlink" title="WooCommerce 是什么？"></a>WooCommerce 是什么？</h2><p>`</p><p><div class="wooco-content"><br>    <h2>世界上最受欢迎的<span>电子商务解决方案</span></h2><br>    <p>所有数据完全由您掌控</p><br>    <p>从今天开始使用吧 ！</p><br></div><br>`</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WooCommerce-是什么？&quot;&gt;&lt;a href=&quot;#WooCommerce-是什么？&quot; class=&quot;headerlink&quot; title=&quot;WooCommerce 是什么？&quot;&gt;&lt;/a&gt;WooCommerce 是什么？&lt;/h2&gt;&lt;p&gt;`&lt;/p&gt;
&lt;p&gt;&lt;div 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo 添加disqus评论系统</title>
    <link href="http://www.dukevs.cn/hexodisqus.html"/>
    <id>http://www.dukevs.cn/hexodisqus.html</id>
    <published>2018-06-20T15:18:20.000Z</published>
    <updated>2018-06-20T15:28:36.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-添加disqus评论系统"><a href="#hexo-添加disqus评论系统" class="headerlink" title="hexo 添加disqus评论系统"></a>hexo 添加disqus评论系统</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以用到的评论系统有挺多的，多说，disqus等，这里只mark下disqus，</span><br><span class="line">disqus 的添加跟主题有关，因为hexo自带disqus，所以添加起来非常简单，这里讲下默认的主题landscape 和 上面演示的主题maupassant</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo-添加disqus评论系统&quot;&gt;&lt;a href=&quot;#hexo-添加disqus评论系统&quot; class=&quot;headerlink&quot; title=&quot;hexo 添加disqus评论系统&quot;&gt;&lt;/a&gt;hexo 添加disqus评论系统&lt;/h2&gt;&lt;figure class
      
    
    </summary>
    
    
      <category term="hexo ,disqus" scheme="http://www.dukevs.cn/tags/hexo-disqus/"/>
    
  </entry>
  
  <entry>
    <title>WordPress无插件禁止登陆admin用户名账户</title>
    <link href="http://www.dukevs.cn/wordpressadmincont.html"/>
    <id>http://www.dukevs.cn/wordpressadmincont.html</id>
    <published>2018-06-20T14:15:07.000Z</published>
    <updated>2018-06-20T14:27:47.585Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WordPress无插件禁止登陆admin用户名账户"><a href="#WordPress无插件禁止登陆admin用户名账户" class="headerlink" title="WordPress无插件禁止登陆admin用户名账户"></a>WordPress无插件禁止登陆admin用户名账户</h2><p>早些时候如果我们有创建WordPress站点的时候默认是需要创建admin用户名的，包括我们一些公司的老的企业网站，他们默认都还是这个用户名。但是由于安全的考虑，准备将屏蔽用户名是admin的登录和扫描，不过如果我们是新WordPress建站的，应该不会用admin用户名。安装向导是可以设置自定义用户名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//WP禁止admin用户名</span><br><span class="line">add_filter( <span class="string">'wp_authenticate'</span>, <span class="string">'wp_no_admin_user'</span> );</span><br><span class="line"><span class="keyword">function</span> wp_no_admin_user(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span> == <span class="string">'admin'</span>)&#123;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">add_filter(<span class="string">'sanitize_user'</span>, <span class="string">'wp_sanitize_user_no_admin'</span>,10,3);</span><br><span class="line"><span class="keyword">function</span> wp_sanitize_user_no_admin(<span class="variable">$username</span>, <span class="variable">$raw_username</span>, <span class="variable">$strict</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$raw_username</span> == <span class="string">'admin'</span> || <span class="variable">$username</span> == <span class="string">'admin'</span>)&#123;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$username</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将代码加入到当前主题Functions.php文件中。就可以屏蔽如果用admin输入用户名登入账户。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WordPress无插件禁止登陆admin用户名账户&quot;&gt;&lt;a href=&quot;#WordPress无插件禁止登陆admin用户名账户&quot; class=&quot;headerlink&quot; title=&quot;WordPress无插件禁止登陆admin用户名账户&quot;&gt;&lt;/a&gt;WordPres
      
    
    </summary>
    
    
      <category term="wordpress" scheme="http://www.dukevs.cn/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>PHP 7.1 的 A non-numeric value encountered 错误和解决方法</title>
    <link href="http://www.dukevs.cn/phpencounterederror.html"/>
    <id>http://www.dukevs.cn/phpencounterederror.html</id>
    <published>2018-06-19T15:28:12.000Z</published>
    <updated>2018-06-19T15:30:52.405Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP-7-1-的-A-non-numeric-value-encountered-错误和解决方法"><a href="#PHP-7-1-的-A-non-numeric-value-encountered-错误和解决方法" class="headerlink" title="PHP 7.1 的 A non-numeric value encountered 错误和解决方法"></a>PHP 7.1 的 A non-numeric value encountered 错误和解决方法</h2><p>升级到 PHP 7.1 之后，经常收到 A non-numeric value encountered 的 warning 信息。比如下面这段代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="string">'123a'</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">'b456'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span>+<span class="variable">$b</span>;</span><br></pre></td></tr></table></figure><h2 id="PHP-7-1-新-E-WARNING"><a href="#PHP-7-1-新-E-WARNING" class="headerlink" title="PHP 7.1 新 E_WARNING"></a>PHP 7.1 新 E_WARNING</h2><p>这是 PHP7.1 新增的 waring 信息，官方的解释是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">New E_WARNING and E_NOTICE errors have been introduced when invalid strings are coerced using operators expecting numbers (+ - * / ** % &lt;&lt; &gt;&gt; | &amp; ^) or their assignment equivalents. An E_NOTICE is emitted when the string begins with a numeric value but contains trailing non-numeric characters, and an E_WARNING is emitted when the string does not contain a numeric value.</span><br><span class="line">在使用 (+ – * / ** % &lt;&lt; &gt;&gt; | &amp; ^) 这些运算操作符时，例如 a+b，如果 a(123a) 和 b(b456) 包含非数字字符时，就会有 A non-numeric value encountered 警告。</span><br></pre></td></tr></table></figure><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>对于这种问题，首先应该在代码逻辑查看，为何会出现混合数值，检查哪里导致出现混合数值。</p><p>对于(+ – * / ** % &lt;&lt; &gt;&gt; | &amp; ^) 的运算，可以使用强制类型转换方法 (intval)，把字符串转换成数字：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">'123a'</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">'b456'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> intval(<span class="variable">$a</span>)+intval(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PHP-7-1-的-A-non-numeric-value-encountered-错误和解决方法&quot;&gt;&lt;a href=&quot;#PHP-7-1-的-A-non-numeric-value-encountered-错误和解决方法&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="php" scheme="http://www.dukevs.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>设置WordPress回复评论无插件微信提醒功能</title>
    <link href="http://www.dukevs.cn/wordwechatplugin.html"/>
    <id>http://www.dukevs.cn/wordwechatplugin.html</id>
    <published>2018-06-19T15:21:20.000Z</published>
    <updated>2018-06-19T15:27:29.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置WordPress回复评论无插件微信提醒功能"><a href="#设置WordPress回复评论无插件微信提醒功能" class="headerlink" title="设置WordPress回复评论无插件微信提醒功能"></a>设置WordPress回复评论无插件微信提醒功能</h2><p>如果我们在使用WordPress程序建站的时候，和网友进行互动一般是通过评论。能在第一时间给网友评论确实可以提高交互及时性。常见的我们有直接在每天看看是否有人评论，或者是用邮件提醒。但是有些时候由于服务器的问题，设置邮件提醒可能比较麻烦。这里我们可以使用微信提醒。</p><p>这里我们是使用的Server酱接口进行提醒的。</p><h3 id="第一、申请接口"><a href="#第一、申请接口" class="headerlink" title="第一、申请接口"></a>第一、申请接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">申请账号：http://sc.ftqq.com/3.version</span><br></pre></td></tr></table></figure><p>这里我们需要申请接口。</p><h3 id="第二、添加脚本"><a href="#第二、添加脚本" class="headerlink" title="第二、添加脚本"></a>第二、添加脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//评论微信推送</span><br><span class="line"><span class="keyword">function</span> sc_send(<span class="variable">$comment_id</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$text</span> = <span class="string">'博客上有一条新的评论'</span>;</span><br><span class="line"><span class="variable">$comment</span> = get_comment(<span class="variable">$comment_id</span>);</span><br><span class="line"><span class="variable">$desp</span> = <span class="variable">$comment</span>-&gt;comment_content;</span><br><span class="line"><span class="variable">$key</span> = <span class="string">'你自己的SCKEY'</span>;</span><br><span class="line"><span class="variable">$postdata</span> = http_build_query(</span><br><span class="line">array(</span><br><span class="line"><span class="string">'text'</span> =&gt; <span class="variable">$text</span>,</span><br><span class="line"><span class="string">'desp'</span> =&gt; <span class="variable">$desp</span></span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$opts</span> = array(<span class="string">'http'</span> =&gt;</span><br><span class="line">array(</span><br><span class="line"><span class="string">'method'</span> =&gt; <span class="string">'POST'</span>,</span><br><span class="line"><span class="string">'header'</span> =&gt; <span class="string">'Content-type: application/x-www-form-urlencoded'</span>,</span><br><span class="line"><span class="string">'content'</span> =&gt; <span class="variable">$postdata</span></span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"><span class="variable">$context</span> = stream_context_create(<span class="variable">$opts</span>);</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$result</span> = file_get_contents(<span class="string">'http://sc.ftqq.com/'</span>.<span class="variable">$key</span>.<span class="string">'.send'</span>, <span class="literal">false</span>, <span class="variable">$context</span>);</span><br><span class="line">&#125;</span><br><span class="line">add_action(<span class="string">'comment_post'</span>, <span class="string">'sc_send'</span>, 19, 2);</span><br></pre></td></tr></table></figure><p>在脚本中修改我们的KEY文件，然后贴到当前WP主题的Functions.php文件中。</p><p>就这么简单。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置WordPress回复评论无插件微信提醒功能&quot;&gt;&lt;a href=&quot;#设置WordPress回复评论无插件微信提醒功能&quot; class=&quot;headerlink&quot; title=&quot;设置WordPress回复评论无插件微信提醒功能&quot;&gt;&lt;/a&gt;设置WordPress回复评
      
    
    </summary>
    
    
      <category term="wordpress wechat" scheme="http://www.dukevs.cn/tags/wordpress-wechat/"/>
    
  </entry>
  
  <entry>
    <title>每天一个WordPress文件：wp-includes/default-constants</title>
    <link href="http://www.dukevs.cn/defaulecon.html"/>
    <id>http://www.dukevs.cn/defaulecon.html</id>
    <published>2018-06-16T15:02:35.000Z</published>
    <updated>2018-06-23T12:08:45.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="每天一个WordPress文件：wp-includes-default-constants"><a href="#每天一个WordPress文件：wp-includes-default-constants" class="headerlink" title="每天一个WordPress文件：wp-includes/default-constants"></a>每天一个WordPress文件：wp-includes/default-constants</h2><p>WordPress 在 wp-includes/default-constants 定义了 WordPress 常用常量的默认值，这些常量都可以在 wp-config.php 中预先定义，这里都会判断如果在 wp-config.php 定义了，就不设置默认值。</p><h2 id="wp-initial-constants-函数"><a href="#wp-initial-constants-函数" class="headerlink" title="wp_initial_constants() 函数"></a>wp_initial_constants() 函数</h2><h3 id="1-定义了这个和文件大小的常量，自己不用去算了，直接用就好了："><a href="#1-定义了这个和文件大小的常量，自己不用去算了，直接用就好了：" class="headerlink" title="1. 定义了这个和文件大小的常量，自己不用去算了，直接用就好了："></a>1. 定义了这个和文件大小的常量，自己不用去算了，直接用就好了：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">define( <span class="string">'KB_IN_BYTES'</span>, 1024 );</span><br><span class="line">define( <span class="string">'MB_IN_BYTES'</span>, 1024 * KB_IN_BYTES );</span><br><span class="line">define( <span class="string">'GB_IN_BYTES'</span>, 1024 * MB_IN_BYTES );</span><br><span class="line">define( <span class="string">'TB_IN_BYTES'</span>, 1024 * GB_IN_BYTES );</span><br></pre></td></tr></table></figure><h3 id="2-定义了和时间有关的常量，也别去算了，直接用就好了："><a href="#2-定义了和时间有关的常量，也别去算了，直接用就好了：" class="headerlink" title="2. 定义了和时间有关的常量，也别去算了，直接用就好了："></a>2. 定义了和时间有关的常量，也别去算了，直接用就好了：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">define( <span class="string">'MINUTE_IN_SECONDS'</span>, 60 );</span><br><span class="line">define( <span class="string">'HOUR_IN_SECONDS'</span>,   60 * MINUTE_IN_SECONDS );</span><br><span class="line">define( <span class="string">'DAY_IN_SECONDS'</span>,    24 * HOUR_IN_SECONDS   );</span><br><span class="line">define( <span class="string">'WEEK_IN_SECONDS'</span>,    7 * DAY_IN_SECONDS    );</span><br><span class="line">define( <span class="string">'MONTH_IN_SECONDS'</span>,  30 * DAY_IN_SECONDS    );</span><br><span class="line">define( <span class="string">'YEAR_IN_SECONDS'</span>,  365 * DAY_IN_SECONDS    );</span><br></pre></td></tr></table></figure><h3 id="3-定义了-WP-CONTENT-DIR-这个最常用的常量，如果-wp-config-php-中没有定义，直接定义为："><a href="#3-定义了-WP-CONTENT-DIR-这个最常用的常量，如果-wp-config-php-中没有定义，直接定义为：" class="headerlink" title="3. 定义了 WP_CONTENT_DIR 这个最常用的常量，如果 wp-config.php 中没有定义，直接定义为："></a>3. 定义了 WP_CONTENT_DIR 这个最常用的常量，如果 wp-config.php 中没有定义，直接定义为：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define( <span class="string">'WP_CONTENT_DIR'</span>, ABSPATH . <span class="string">'wp-content'</span> );</span><br></pre></td></tr></table></figure><p>所以这个其实也说可以在 [wp-config.php] 中将 [wp-content] 目录设置为任何一个目录，伪装一下，让人不知道你用的是 WordPress。</p><h3 id="4-如果全局变量-blog-id-没有设置，就设置为-1"><a href="#4-如果全局变量-blog-id-没有设置，就设置为-1" class="headerlink" title="4. 如果全局变量 [$blog_id] 没有设置，就设置为 1."></a>4. 如果全局变量 [$blog_id] 没有设置，就设置为 1.</h3><h3 id="5-定义了-WP-MEMORY-LIMIT-和-WP-MAX-MEMORY-LIMIT-这两个-WordPress-运行时允许的内存。"><a href="#5-定义了-WP-MEMORY-LIMIT-和-WP-MAX-MEMORY-LIMIT-这两个-WordPress-运行时允许的内存。" class="headerlink" title="5. 定义了 [WP_MEMORY_LIMIT] 和 [WP_MAX_MEMORY_LIMIT] 这两个 WordPress 运行时允许的内存。"></a>5. 定义了 [WP_MEMORY_LIMIT] 和 [WP_MAX_MEMORY_LIMIT] 这两个 WordPress 运行时允许的内存。</h3><p>这两个有点复杂，WordPress 首先[wp-config.php] 中有没有定义，如果没有定义的话，检查当前的 PHP 系统是否支持运行时修改脚本所需的内存，如果不行就用 PHP 默认的设置，如果可以的话，[WP_MEMORY_LIMIT] 在多站点设置为 64M，单站点设置为 40M。[WP_MAX_MEMORY_LIMIT] 设置为 256M。</p><h3 id="6-然后-WP-DEBUG-WP-DEBUG-DISPLAY-WP-DEBUG-LOG-WP-CACHE-SCRIPT-DEBUG-MEDIA-TRASH-SHORTINIT-没有定义的话，默认都被定义为-false。"><a href="#6-然后-WP-DEBUG-WP-DEBUG-DISPLAY-WP-DEBUG-LOG-WP-CACHE-SCRIPT-DEBUG-MEDIA-TRASH-SHORTINIT-没有定义的话，默认都被定义为-false。" class="headerlink" title="6. 然后[WP_DEBUG], [WP_DEBUG_DISPLAY], [WP_DEBUG_LOG], [WP_CACHE], [SCRIPT_DEBUG], [MEDIA_TRASH], [SHORTINIT] 没有定义的话，默认都被定义为 false。"></a>6. 然后[WP_DEBUG], [WP_DEBUG_DISPLAY], [WP_DEBUG_LOG], [WP_CACHE], [SCRIPT_DEBUG], [MEDIA_TRASH], [SHORTINIT] 没有定义的话，默认都被定义为 false。</h3><p>这几个变量是干嘛的？简单说一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WP_DEBUG：是否开启 PHP debug 功能。</span><br><span class="line">WP_DEBUG_DISPLAY：PHP 错误脚本是否直接显示出来。</span><br><span class="line">WP_DEBUG_LOG：PHP 错误脚本是否存到文件中（wp-content/debug.log）。</span><br><span class="line">WP_CACHE：是否开启 WordPress 默认的文件缓存。</span><br><span class="line">SCRIPT_DEBUG：WordPress 加载的 JS 脚本都是 min 版本，如果要进行 JS 脚本 debug 的话，打开这个常量，就会加载非 min 版本，便于 debug。</span><br><span class="line">MEDIA_TRASH：后台的媒体是否有垃圾箱，设置为 <span class="literal">true</span>，则图片等媒体不会直接删除，而是进入垃圾箱。</span><br><span class="line">SHORTINIT：用于加载最小化 WordPress。</span><br></pre></td></tr></table></figure><h3 id="7-最后定义-WP-FEATURE-BETTER-PASSWORDS-默认为：-true，就是系统会建议用户是强度更好的密码的。"><a href="#7-最后定义-WP-FEATURE-BETTER-PASSWORDS-默认为：-true，就是系统会建议用户是强度更好的密码的。" class="headerlink" title="7. 最后定义 WP_FEATURE_BETTER_PASSWORDS 默认为： true，就是系统会建议用户是强度更好的密码的。"></a>7. 最后定义 WP_FEATURE_BETTER_PASSWORDS 默认为： true，就是系统会建议用户是强度更好的密码的。</h3><h2 id="wp-plugin-directory-constants-函数"><a href="#wp-plugin-directory-constants-函数" class="headerlink" title="wp_plugin_directory_constants() 函数"></a>wp_plugin_directory_constants() 函数</h2><p>WP_CONTENT_URL, WP_PLUGIN_DIR, WP_PLUGIN_URL, PLUGINDIR, WPMU_PLUGIN_DIR, WPMU_PLUGIN_URL, MUPLUGINDIR 这几个插件和多站点 mu 插件的目录和地址的默认，当然在 wp-config.php 中将这些目录和地址设置为其他，伪装一下，让人不知道你用的是 WordPress。</p><h2 id="wp-cookie-constants-函数"><a href="#wp-cookie-constants-函数" class="headerlink" title="wp_cookie_constants() 函数"></a>wp_cookie_constants() 函数</h2><p>定义 cookie 相关的变量的默认值，一般我们不会去改动他，所以这里就详细讲解了。</p><h2 id="wp-ssl-constants-函数"><a href="#wp-ssl-constants-函数" class="headerlink" title="wp_ssl_constants() 函数"></a>wp_ssl_constants() 函数</h2><p>它定义了 进入后台是否使用加密地址常量FORCE_SSL_ADMIN 和 进入登录页面是否使用加密地址常量FORCE_SSL_LOGIN 默认都为 false，可以在 wp-config.php 中修改。</p><h2 id="wp-functionality-constants-函数"><a href="#wp-functionality-constants-函数" class="headerlink" title="wp_functionality_constants() 函数"></a>wp_functionality_constants() 函数</h2><p>定义了自动保存常量 AUTOSAVE_INTERVAL 为 60 秒，自动清空垃圾箱常量 EMPTY_TRASH_DAYS 为 30 天，是否开始文章修订功能常量 WP_POST_REVISIONS 为 false，定时作业最长工作时间常量 WP_CRON_LOCK_TIMEOUT 为 60 秒。</p><h2 id="wp-templating-constants-函数"><a href="#wp-templating-constants-函数" class="headerlink" title="wp_templating_constants() 函数"></a>wp_templating_constants() 函数</h2><p>定义了模板目录常量 TEMPLATEPATH，样式文件所在目录常量 STYLESHEETPATH 的值，这个当然不能在wp-config.php 中修改设置，你只要拿去用就好了。</p><p>最后是：系统的默认主题常量 WP_DEFAULT_THEME。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;每天一个WordPress文件：wp-includes-default-constants&quot;&gt;&lt;a href=&quot;#每天一个WordPress文件：wp-includes-default-constants&quot; class=&quot;headerlink&quot; title=&quot;每天
      
    
    </summary>
    
    
      <category term="wordpress 文件" scheme="http://www.dukevs.cn/tags/wordpress-%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>WordPress 技巧：创建博客时不创建 links 表</title>
    <link href="http://www.dukevs.cn/linktable.html"/>
    <id>http://www.dukevs.cn/linktable.html</id>
    <published>2018-06-16T15:00:17.000Z</published>
    <updated>2018-06-23T12:07:25.769Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WordPress-技巧：创建博客时不创建-links-表"><a href="#WordPress-技巧：创建博客时不创建-links-表" class="headerlink" title="WordPress 技巧：创建博客时不创建 links 表"></a>WordPress 技巧：创建博客时不创建 links 表</h2><p>WordPress 默认还有 links 表，但是现在友情链接都用得很少，我们可以再在多站点管理，如何在创建博客的时候不创建这个表呢？</p><h3 id="写个插件，把下面的程序-copy-进去即可："><a href="#写个插件，把下面的程序-copy-进去即可：" class="headerlink" title="写个插件，把下面的程序 copy 进去即可："></a>写个插件，把下面的程序 copy 进去即可：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">add_filter(<span class="string">'dbdelta_create_queries'</span>, <span class="keyword">function</span>(<span class="variable">$cqueries</span>)&#123;</span><br><span class="line">    <span class="variable">$table_names</span>    = array_keys(<span class="variable">$cqueries</span>);</span><br><span class="line"></span><br><span class="line">    foreach (<span class="variable">$table_names</span> as <span class="variable">$table_name</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(strpos(<span class="variable">$table_name</span>, <span class="string">'links'</span>))&#123;</span><br><span class="line">            <span class="built_in">unset</span>(<span class="variable">$cqueries</span>[<span class="variable">$table_name</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$cqueries</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WordPress-技巧：创建博客时不创建-links-表&quot;&gt;&lt;a href=&quot;#WordPress-技巧：创建博客时不创建-links-表&quot; class=&quot;headerlink&quot; title=&quot;WordPress 技巧：创建博客时不创建 links 表&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="wordpress" scheme="http://www.dukevs.cn/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>WordPress 技巧：强制设置二级分类</title>
    <link href="http://www.dukevs.cn/secondcate.html"/>
    <id>http://www.dukevs.cn/secondcate.html</id>
    <published>2018-06-16T14:57:41.000Z</published>
    <updated>2018-06-23T12:07:04.051Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WordPress-技巧：强制设置二级分类"><a href="#WordPress-技巧：强制设置二级分类" class="headerlink" title="WordPress 技巧：强制设置二级分类"></a>WordPress 技巧：强制设置二级分类</h1><p>如果你博客的分类只有两级，为了防止设置错误，可以在 WordPress 后台分类设置页面，设置父级分类下拉菜单只显示第一层，代码很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">add_filter(<span class="string">'taxonomy_parent_dropdown_args'</span>, <span class="keyword">function</span>(<span class="variable">$args</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(is_admin())&#123;</span><br><span class="line"><span class="variable">$args</span>[<span class="string">'depth'</span>]= 1;</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$args</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WordPress-技巧：强制设置二级分类&quot;&gt;&lt;a href=&quot;#WordPress-技巧：强制设置二级分类&quot; class=&quot;headerlink&quot; title=&quot;WordPress 技巧：强制设置二级分类&quot;&gt;&lt;/a&gt;WordPress 技巧：强制设置二级分类&lt;/
      
    
    </summary>
    
    
      <category term="wordpress" scheme="http://www.dukevs.cn/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>node+express+vue+mongodb实现前后端交互</title>
    <link href="http://www.dukevs.cn/nodeexpress.html"/>
    <id>http://www.dukevs.cn/nodeexpress.html</id>
    <published>2018-06-15T16:22:52.000Z</published>
    <updated>2018-06-15T16:25:39.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="node-express-vue-mongodb实现前后端交互"><a href="#node-express-vue-mongodb实现前后端交互" class="headerlink" title="node+express+vue+mongodb实现前后端交互"></a>node+express+vue+mongodb实现前后端交互</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h4 id="用vue-cli脚手架生成生"><a href="#用vue-cli脚手架生成生" class="headerlink" title="用vue-cli脚手架生成生"></a>用vue-cli脚手架生成生</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line">init &lt;template&gt; &lt;app-name&gt; 从一个远程模板生成一个项目 (遗留 API, 依赖 `@vue/cli-init`)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;node-express-vue-mongodb实现前后端交互&quot;&gt;&lt;a href=&quot;#node-express-vue-mongodb实现前后端交互&quot; class=&quot;headerlink&quot; title=&quot;node+express+vue+mongodb实现前后端交
      
    
    </summary>
    
    
      <category term="node, express, vue, mongodb" scheme="http://www.dukevs.cn/tags/node-express-vue-mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Github删除所有提交历史记录</title>
    <link href="http://www.dukevs.cn/githubdelet.html"/>
    <id>http://www.dukevs.cn/githubdelet.html</id>
    <published>2018-06-15T16:02:23.000Z</published>
    <updated>2018-06-15T16:12:08.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github删除所有提交历史记录"><a href="#Github删除所有提交历史记录" class="headerlink" title="Github删除所有提交历史记录"></a>Github删除所有提交历史记录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">尝试 运行 git checkout –orphan latest_branch</span><br><span class="line"></span><br><span class="line">添加所有文件git add -A</span><br><span class="line"></span><br><span class="line">提交更改git commit -am “commit message”</span><br><span class="line"></span><br><span class="line">删除分支git branch -D master</span><br><span class="line"></span><br><span class="line">将当前分支重命名git branch -m master</span><br><span class="line"></span><br><span class="line">最后，强制更新存储库。git push -f origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Github删除所有提交历史记录&quot;&gt;&lt;a href=&quot;#Github删除所有提交历史记录&quot; class=&quot;headerlink&quot; title=&quot;Github删除所有提交历史记录&quot;&gt;&lt;/a&gt;Github删除所有提交历史记录&lt;/h1&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="github" scheme="http://www.dukevs.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Github常用命令(陆续更新)</title>
    <link href="http://www.dukevs.cn/Github-commend.html"/>
    <id>http://www.dukevs.cn/Github-commend.html</id>
    <published>2018-06-12T15:06:51.000Z</published>
    <updated>2018-06-12T15:10:15.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github常用命令-陆续更新"><a href="#Github常用命令-陆续更新" class="headerlink" title="Github常用命令(陆续更新)"></a>Github常用命令(陆续更新)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">初始化新仓库：git init</span><br><span class="line"></span><br><span class="line">检查状态：git status</span><br><span class="line"></span><br><span class="line">暂存：git add</span><br><span class="line"></span><br><span class="line">提交：git commit 远程仓库</span><br><span class="line"></span><br><span class="line">链接远程仓库：git remote add</span><br><span class="line"></span><br><span class="line">上传到服务器：git push</span><br><span class="line"></span><br><span class="line">克隆仓库：git <span class="built_in">clone</span></span><br><span class="line"></span><br><span class="line">从服务器上拉取代码：git pull 分支</span><br><span class="line"></span><br><span class="line">创建新分支：git branch</span><br><span class="line"></span><br><span class="line">切换分支：git checkout</span><br><span class="line"></span><br><span class="line">合并分支：git merge 深入</span><br><span class="line"></span><br><span class="line">比对两个不同提交之间的差别：git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">回滚提交：git revert</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Github常用命令-陆续更新&quot;&gt;&lt;a href=&quot;#Github常用命令-陆续更新&quot; class=&quot;headerlink&quot; title=&quot;Github常用命令(陆续更新)&quot;&gt;&lt;/a&gt;Github常用命令(陆续更新)&lt;/h1&gt;&lt;figure class=&quot;high
      
    
    </summary>
    
    
      <category term="github" scheme="http://www.dukevs.cn/tags/github/"/>
    
  </entry>
  
</feed>
